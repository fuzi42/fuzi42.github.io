{"title":"React学习（2）","date":"2019-10-08T01:32:22.916Z","link":"2019/10/08/React学习（2）","updated":"2019-10-08T01:32:51.125Z","content":"<h4 id=\"React高阶组件\">React高阶组件<a href=\"2019/10/08/React学习（2）#React高阶组件\"></a></h4><h4 id=\"高阶组件定义\">高阶组件定义<a href=\"2019/10/08/React学习（2）#高阶组件定义\"></a></h4><blockquote>\n<p>a higher-order component is a function that takes a component and returns a new component.</p>\n</blockquote>\n<p>翻译：高阶组件就是一个函数，且该函数接受一个组件作为参数，并返回一个新的组件。</p>\n<p>理解了吗？看了定义似懂非懂？继续往下看。</p>\n<h4 id=\"函数模拟高阶组件\">函数模拟高阶组件<a href=\"2019/10/08/React学习（2）#函数模拟高阶组件\"></a></h4><p>我们通过普通函数来理解什么是高阶组件哦~</p>\n<ol>\n<li>最普通的方法，一个<code>welcome</code>，一个<code>goodbye</code>。两个函数先从<code>localStorage</code>读取了<code>username</code>，然后对<code>username</code>做了一些处理。</li>\n</ol>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">welcome</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> username = localStorage.getItem(<span class=\"string\">'username'</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'welcome '</span> + username);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">goodbey</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> username = localStorage.getItem(<span class=\"string\">'username'</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'goodbey '</span> + username);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">welcome();</span><br><span class=\"line\">goodbey();</span><br></pre></td></tr></table></div></figure>\n\n<ol>\n<li><p>我们发现两个函数有一句代码是一样的，这叫冗余唉。不好不好~（你可以把那一句代码理解成平时的一大堆代码）</p>\n<p>我们要写一个中间函数，读取<code>username</code>,他来负责把<code>username</code>传递给两个函数。</p>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">welcome</span>(<span class=\"params\">username</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'welcome '</span> + username);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">goodbey</span>(<span class=\"params\">username</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'goodbey '</span> + username);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">wrapWithUsername</span>(<span class=\"params\">wrappedFunc</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> newFunc = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> username = localStorage.getItem(<span class=\"string\">'username'</span>);</span><br><span class=\"line\">        wrappedFunc(username);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newFunc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">welcome = wrapWithUsername(welcome);</span><br><span class=\"line\">goodbey = wrapWithUsername(goodbey);</span><br><span class=\"line\"></span><br><span class=\"line\">welcome();</span><br><span class=\"line\">welcome();</span><br></pre></td></tr></table></div></figure>\n\n<p>好了，我们里面的<code>wrapWithUsername</code>函数就是一个“高阶函数”。<br>他做了什么？他帮我们处理了<code>username</code>，传递给目标函数。我们调用最终的函数<code>welcome</code>的时候，根本不用关心<code>username</code>是怎么来的。</p>\n<p>我们增加个用户<code>study</code>函数。</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">study</span>(<span class=\"params\">username</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(username+<span class=\"string\">' study'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">study = wrapWithUsername(study);</span><br><span class=\"line\"></span><br><span class=\"line\">study();</span><br></pre></td></tr></table></div></figure>\n\n<p>这里你是不是理解了为什么说<code>wrapWithUsername</code>是高阶函数？我们只需要知道，用<code>wrapWithUsername</code>包装我们的<code>study</code>函数后，<code>study</code>函数第一个参数是<code>username</code>。</p>\n<p>我们写平时写代码的时候，不用关心<code>wrapWithUsername</code>内部是如何实现的。</p>\n<h4 id=\"高阶组件（HOC）\">高阶组件（HOC）<a href=\"2019/10/08/React学习（2）#高阶组件（HOC）\"></a></h4><p><strong>高阶组件就是一个没有副作用的纯函数。</strong></p>\n<p>我们把上一节的函数统统改成<code>react</code>组件。</p>\n<ol>\n<li>最普通的组件哦。</li>\n</ol>\n<p><code>welcome</code>函数转为<code>react</code>组件。</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123;Component&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Welcome</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">            username: <span class=\"string\">''</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    componentWillMount() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> username = localStorage.getItem(<span class=\"string\">'username'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">            username: username</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    render() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;div&gt;welcome &#123;<span class=\"keyword\">this</span>.state.username&#125;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        )</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default Welcome;</span></span><br></pre></td></tr></table></div></figure>\n\n<p><code>goodbey</code>函数转为<code>react</code>组件。</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123;Component&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Goodbye</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">            username: <span class=\"string\">''</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    componentWillMount() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> username = localStorage.getItem(<span class=\"string\">'username'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">            username: username</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    render() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;div&gt;goodbye &#123;<span class=\"keyword\">this</span>.state.username&#125;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        )</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default Goodbye;</span></span><br></pre></td></tr></table></div></figure>\n\n<ol>\n<li>现在你是不是更能看到问题所在了？两个组件大部分代码都是重复的唉。</li>\n</ol>\n<p>按照上一节<code>wrapWithUsername</code>函数的思路，我们来写一个高阶组件(高阶组件就是一个函数，且该函数接受一个组件作为参数，并返回一个新的组件)。</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123;Component&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> (WrappedComponent) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">NewComponent</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">constructor</span>() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>();</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">                username: <span class=\"string\">''</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        componentWillMount() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> username = localStorage.getItem(<span class=\"string\">'username'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">                username: username</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        render() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &lt;WrappedComponent username=&#123;this.state.username&#125;/&gt;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return NewComponent</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>这样我们就能简化<code>Welcome</code>组件和<code>Goodbye</code>组件。</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123;Component&#125; <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> wrapWithUsername <span class=\"keyword\">from</span> <span class=\"string\">'wrapWithUsername'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Welcome</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    render() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">            &lt;div&gt;welcome &#123;<span class=\"keyword\">this</span>.props.username&#125;&lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        )</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">Welcome = wrapWithUsername(Welcome);</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default Welcome;</span></span><br><span class=\"line\"><span class=\"regexp\">import React, &#123;Component&#125; from 'react';</span></span><br><span class=\"line\"><span class=\"regexp\">import wrapWithUsername from 'wrapWithUsername';</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">class Goodbye extends Component &#123;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">    render() &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        return (</span></span><br><span class=\"line\"><span class=\"regexp\">            &lt;div&gt;goodbye &#123;this.props.username&#125;&lt;/</span>div&gt;</span><br><span class=\"line\">        )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Goodbye = wrapWithUsername(Goodbye);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Goodbye;</span><br></pre></td></tr></table></div></figure>\n\n<p>看到没有，高阶组件就是把<code>username</code>通过<code>props</code>传递给目标组件了。目标组件只管从<code>props</code>里面拿来用就好了。</p>\n","prev":{"title":"小项目开发文档","link":"2019/10/08/小项目开发文档"},"next":{"title":"React学习（1）","link":"2019/10/08/React学习（1）"},"plink":"/2019/10/08/React学习（2）/"}