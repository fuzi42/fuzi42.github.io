{"title":"关于React学习","date":"2019-10-02T08:09:06.918Z","link":"2019/10/02/关于React学习","updated":"2019-10-02T08:09:06.940Z","content":"<h1 id=\"关于ReactJs\"><strong>关于ReactJs</strong><a href=\"2019/10/02/关于React学习#关于ReactJs\"></a></h1><p>React是一种js的集成库，页面由组件构成，交互性很高，灵活。</p>\n<h5 id=\"ReactJs写法有三种：\">ReactJs写法有三种：<a href=\"2019/10/02/关于React学习#ReactJs写法有三种：\"></a></h5><ul>\n<li>1.直接在html中嵌入reactjs</li>\n<li>2.在js文件中编写</li>\n<li>3.在jsx中编写，需要js返回事件</li>\n</ul>\n<h5 id=\"ReactJs中注意事项：\">ReactJs中注意事项：<a href=\"2019/10/02/关于React学习#ReactJs中注意事项：\"></a></h5><ul>\n<li><p>react中state为节点属性可修改，props为节点参数，只读不可修改。</p>\n</li>\n<li><p>state的值修改麻烦。例如数组[ ] 用赋值修改</p>\n</li>\n<li><p>父组件与子组件之间的数据传输：</p>\n</li>\n<li><p>父传子利用props</p>\n</li>\n<li><p>子传父利用参数函数回调</p>\n</li>\n<li><p>render（）渲染：页面不断render（）渲染可能会造成数据冗杂，性能降低。</p>\n</li>\n<li><p><strong>componentWillMount</strong>：在渲染前调用，在客户端也在服务端。</p>\n</li>\n<li><p><strong>componentDidMount</strong>：在第一次渲染后调用，只在客户端。之后组件已经生成了对应的DOM结构，可以通过this.getDOMNode（）来进行访问。如果你想和其他JavaScript框架一起使用，可以在这个方法中调用setTimeout，setInterval或者发送AJAX请求等操作（防止异步操作阻塞UI）。</p>\n</li>\n<li><p><strong>componentWillReceiveProps</strong>：在组件接收到一个新的prop（更新后）时被调用。这个方法在初始化渲染时不会被调用。</p>\n</li>\n<li><p><strong>shouldComponentUpdate</strong>：返回一个布尔值。在组件接收到新的道具或者状态时被调用。在初始化时或者使用forceUpdate时不被调用。<br>可以在你确认不需要更新组件时使用。</p>\n</li>\n<li><p><strong>componentWillUpdate</strong>：在组件接收到新的道具或者状态但还没有渲染时被调用。在初始化时不会被调用。</p>\n</li>\n<li><p><strong>componentDidUpdate</strong>：在组件完成更新后立即调用。在初始化时不会被调用。</p>\n</li>\n<li><p><strong>componentWillUnmount</strong>：在组件从DOM中移除之前立刻被调用。</p>\n</li>\n<li><p>state 状态最大只能有两层深度。</p>\n</li>\n<li><p>每次 state 值改变则会 render 。</p>\n</li>\n<li><p>js 中参数类型只能是值，三大引用类型：1.Object类型   2.Array类型   3. Function类型</p>\n</li>\n</ul>\n","next":{"title":"Hello World","link":"2019/10/01/hello-world"},"plink":"http://localhost:4000/2019/10/02/关于React学习/","toc":[{"title":"<strong>关于ReactJs</strong>","id":"关于ReactJs","index":"1"}]}